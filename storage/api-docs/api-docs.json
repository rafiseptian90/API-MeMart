{
    "openapi": "3.0.0",
    "info": {
        "title": "API MeMart",
        "description": "API MeMart Documentation using Swagger. Created By @rshme",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "email": "rafiseptian90@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "api/v1"
        }
    ],
    "paths": {
        "/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login",
                "description": "User Authentication Endpoint",
                "operationId": "login",
                "requestBody": {
                    "description": "Fill user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "password"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "super.admin"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    }
                }
            }
        },
        "/auth/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Me",
                "description": "Show User Logged In Data",
                "operationId": "me",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/auth/reset-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset Password",
                "description": "Reset User Password Endpoint",
                "operationId": "reset-password",
                "requestBody": {
                    "description": "Fill a field is needed for reseting a password",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "old_password",
                                    "new_password",
                                    "new_password_confirmation"
                                ],
                                "properties": {
                                    "old_password": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "password"
                                    },
                                    "new_password": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "new_password"
                                    },
                                    "new_password_confirmation": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "new_password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout",
                "description": "Logout Endpoint",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/classroom": {
            "get": {
                "tags": [
                    "Classroom"
                ],
                "summary": "All Classroom",
                "description": "Lists of Classroom",
                "operationId": "classroom.index",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Classroom"
                ],
                "summary": "Store a new Classroom",
                "description": "Store a new Classroom",
                "operationId": "classroom.store",
                "requestBody": {
                    "description": "Fill some field for storing a new Classroom",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "XII RPL 2"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/classroom/{classroomID}": {
            "get": {
                "tags": [
                    "Classroom"
                ],
                "summary": "Take one Classroom",
                "description": "Take one Classroom by their ID",
                "operationId": "classroom.show",
                "parameters": [
                    {
                        "name": "classroomID",
                        "in": "path",
                        "description": "The ID Classroom that want to show",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Classroom ID not found",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Classroom"
                ],
                "summary": "Update a Classroom",
                "description": "Update a Classroom by their ID",
                "operationID": "classroom.update",
                "parameters": [
                    {
                        "name": "classroomID",
                        "required": true,
                        "in": "path",
                        "description": "The ID of Classroom that want to update"
                    }
                ],
                "requestBody": {
                    "description": "Fill a field needed for updating a Classroom",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "XII RPL 1"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Classroom ID not found"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Classroom"
                ],
                "summary": "Delete a Classroom",
                "description": "Delete a Classroom by their ID",
                "operationID": "classroom.delete",
                "parameters": [
                    {
                        "name": "classroomID",
                        "required": true,
                        "in": "path",
                        "description": "The ID of a Classroom that want to delete"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Classroom ID not found"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/parent-income": {
            "get": {
                "tags": [
                    "Parent Income"
                ],
                "summary": "All Parent Income",
                "description": "Lists of Parent Income",
                "operationId": "parent-income.index",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Parent Income"
                ],
                "summary": "Store a new Parent Income",
                "description": "Store a new Parent Income",
                "operationId": "parent-income.store",
                "requestBody": {
                    "required": true,
                    "description": "Fill some field for storing a new Parent Income",
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount",
                                    "score"
                                ],
                                "properties": {
                                    "amount": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "More than Rp 5.000.000"
                                    },
                                    "score": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/parent-income/{parentIncomeID}": {
            "get": {
                "tags": [
                    "Parent Income"
                ],
                "summary": "Take one Parent Income",
                "description": "Take one Parent Income by their ID",
                "operationId": "parent-income.show",
                "parameters": [
                    {
                        "name": "parentIncomeID",
                        "required": true,
                        "in": "path",
                        "description": "The ID of a Parent Income that want to show"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Parent Income ID not found"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Parent Income"
                ],
                "summary": "Update a Parent Income",
                "description": "Update a Parent Income by their ID",
                "operationID": "parent-income.update",
                "parameters": [
                    {
                        "name": "parentIncomeID",
                        "required": true,
                        "in": "path",
                        "description": "The ID of a Parent Income that want to update"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "description": "Fill some field for updating a Parent Income",
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount",
                                    "score"
                                ],
                                "properties": {
                                    "amount": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "More than Rp.5.500.000"
                                    },
                                    "score": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 0
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Parent Income ID not found"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Parent Income"
                ],
                "summary": "Delete a Parent Income",
                "description": "Delete a Parent Income by their ID",
                "operationID": "parent-income.delete",
                "parameters": [
                    {
                        "name": "parentIncomeID",
                        "required": true,
                        "in": "path",
                        "description": "The ID of a Parent Income that want to delete"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Parent Income ID not found"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/parent-completness": {
            "get": {
                "tags": [
                    "Parent Completness"
                ],
                "summary": "All Parent Completness",
                "description": "Lists of Parent Completness",
                "operationId": "parent-completness.index",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Parent Completness"
                ],
                "summary": "Store a new Parent Completness",
                "description": "Store a new Parent Completness",
                "operationId": "parent-completness.store",
                "requestBody": {
                    "required": true,
                    "description": "Fill some field for storing a new Parent Completness",
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "type",
                                    "score"
                                ],
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "A new parent completness"
                                    },
                                    "score": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 7
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/parent-completness/{parentCompletnessID}": {
            "get": {
                "tags": [
                    "Parent Completness"
                ],
                "summary": "Take one Parent Completness",
                "description": "Take one Parent Completness by their ID",
                "operationId": "parent-completness.show",
                "parameters": [
                    {
                        "name": "parentCompletnessID",
                        "required": true,
                        "in": "path",
                        "description": "The ID of a Parent Completness that want to show"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Parent Completness ID not found"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Parent Completness"
                ],
                "summary": "Update a Parent Completness",
                "description": "Update a Parent Completness by their ID",
                "operatorID": "parent-completness.update",
                "parameters": [
                    {
                        "name": "parentCompletnessID",
                        "required": true,
                        "in": "path",
                        "description": "The ID of Parent Completness that want be updated"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "description": "Fill some field for updating a Parent Completness",
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "type",
                                    "score"
                                ],
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "updating parent completness"
                                    },
                                    "score": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Parent Completness ID not found"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Parent Completness"
                ],
                "summary": "Delete a Parent Completness",
                "description": "Delete a Parent Completness by their ID",
                "operationID": "parent-completness.delete",
                "parameters": [
                    {
                        "name": "parentCompletnessID",
                        "required": true,
                        "in": "path",
                        "description": "The ID of Parent Completness that want to delete"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Parent Completness ID not found"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/other-criteria": {
            "get": {
                "tags": [
                    "Other Criteria"
                ],
                "summary": "All Other Criteria",
                "description": "Lists of Other Criteria",
                "operationId": "other-criteria.index",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Other Criteria"
                ],
                "summary": "Store a new Other Criteria",
                "description": "Store a new Other Criteria",
                "operationId": "other-criteria.store",
                "requestBody": {
                    "required": true,
                    "description": "Fill some field for storing a new Other Criteria",
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "score"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "A new other criteria"
                                    },
                                    "score": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 7
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/other-criteria/{otherCriteriaID}": {
            "get": {
                "tags": [
                    "Other Criteria"
                ],
                "summary": "Take one Other Criteria",
                "description": "Take one Other Criteria by their ID",
                "operationId": "other-criteria.show",
                "parameters": [
                    {
                        "name": "otherCriteriaID",
                        "required": true,
                        "in": "path",
                        "description": "The ID of a Other Criteria that want to show"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Other Criteria ID not found"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Other Criteria"
                ],
                "summary": "Update a Other Criteria",
                "description": "Update a Other Criteria by their ID",
                "operatorID": "other-criteria.update",
                "parameters": [
                    {
                        "name": "otherCriteriaID",
                        "required": true,
                        "in": "path",
                        "description": "The ID of Other Criteria that want be updated"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "description": "Fill some field for updating a Other Criteria",
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "score"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "updating parent completness"
                                    },
                                    "score": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Other Criteria ID not found"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Other Criteria"
                ],
                "summary": "Delete a Other Criteria",
                "description": "Delete a Other Criteria by their ID",
                "operationID": "other-criteria.delete",
                "parameters": [
                    {
                        "name": "otherCriteriaID",
                        "required": true,
                        "in": "path",
                        "description": "The ID of Other Criteria that want to delete"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Other Criteria ID not found"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/profit": {
            "get": {
                "tags": [
                    "Profit"
                ],
                "summary": "All Profit",
                "description": "Lists of Profit",
                "operationId": "profit.index",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Profit"
                ],
                "summary": "Store a new Profit",
                "description": "Store a new Profit",
                "operationId": "profit.store",
                "requestBody": {
                    "required": true,
                    "description": "Fill some field for storing a new Profit",
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount",
                                    "score"
                                ],
                                "properties": {
                                    "amount": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "A new profit"
                                    },
                                    "score": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 7
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/profit/{profitID}": {
            "get": {
                "tags": [
                    "Profit"
                ],
                "summary": "Take one Profit",
                "description": "Take one Profit by their ID",
                "operationId": "profit.show",
                "parameters": [
                    {
                        "name": "profitID",
                        "required": true,
                        "in": "path",
                        "description": "The ID of a Profit that want to show"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Profit ID not found"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Profit"
                ],
                "summary": "Update a Profit",
                "description": "Update a Profit by their ID",
                "operatorID": "profit.update",
                "parameters": [
                    {
                        "name": "profitID",
                        "required": true,
                        "in": "path",
                        "description": "The ID of Profit that want be updated"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "description": "Fill some field for updating a Profit",
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount",
                                    "score"
                                ],
                                "properties": {
                                    "amount": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "updating a profit"
                                    },
                                    "score": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Profit ID not found"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Profit"
                ],
                "summary": "Delete a Profit",
                "description": "Delete a Profit by their ID",
                "operationID": "profit.delete",
                "parameters": [
                    {
                        "name": "profitID",
                        "required": true,
                        "in": "path",
                        "description": "The ID of Profit that want to delete"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Profit ID not found"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/student": {
            "get": {
                "tags": [
                    "Student"
                ],
                "summary": "All Student",
                "description": "Lists of Student",
                "operationId": "student.index",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Student"
                ],
                "summary": "Store a new Student",
                "description": "Store a new Student",
                "operationId": "student.store",
                "requestBody": {
                    "required": true,
                    "description": "Fill some field for storing a new Student",
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "classroom_id",
                                    "parent_income_id",
                                    "parent_completness_id",
                                    "other_criteria_id",
                                    "name",
                                    "card_number",
                                    "card_type",
                                    "phone_number",
                                    "gender"
                                ],
                                "properties": {
                                    "classroom_id": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 1
                                    },
                                    "parent_income_id": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 1
                                    },
                                    "parent_completness_id": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 1
                                    },
                                    "other_criteria_id": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "John Doe"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "enum": ["M", "F"]
                                    },
                                    "address": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Jln Arief Rahman Hakim No 45"
                                    },
                                    "card_type": {
                                        "type": "string",
                                        "enum": ["nip", "nisn"]
                                    },
                                    "card_number": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 173834764732
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "087847384777"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/student/{studentID}": {
            "get": {
                "tags": [
                    "Student"
                ],
                "summary": "Take one Student",
                "description": "Take one Student by their ID",
                "operationId": "student.show",
                "parameters": [
                    {
                        "name": "studentID",
                        "required": true,
                        "in": "path",
                        "description": "The ID of a Student that want to show"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Student ID not found"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Student"
                ],
                "summary": "Update a Student",
                "description": "Update a Student by their ID",
                "operatorID": "student.update",
                "parameters": [
                    {
                        "name": "studentID",
                        "required": true,
                        "in": "path",
                        "description": "The ID of Student that want be updated"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "description": "Fill some field for storing a new Student",
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "classroom_id",
                                    "parent_income_id",
                                    "parent_completness_id",
                                    "other_criteria_id",
                                    "name",
                                    "card_number",
                                    "card_type",
                                    "phone_number",
                                    "gender"
                                ],
                                "properties": {
                                    "classroom_id": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 1
                                    },
                                    "parent_income_id": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 1
                                    },
                                    "parent_completness_id": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 1
                                    },
                                    "other_criteria_id": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "John Doe"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "enum": ["M", "F"]
                                    },
                                    "address": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Jln Arief Rahman Hakim No 45"
                                    },
                                    "card_type": {
                                        "type": "string",
                                        "enum": ["nip", "nisn"]
                                    },
                                    "card_number": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 173834764732
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "087847384777"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Student ID not found"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Student"
                ],
                "summary": "Delete a Student",
                "description": "Delete a Student by their ID",
                "operationID": "student.delete",
                "parameters": [
                    {
                        "name": "studentID",
                        "required": true,
                        "in": "path",
                        "description": "The ID of Student that want to delete"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Student ID not found"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "api_key": {
                "type": "http",
                "description": "Fill Bearer token for the security",
                "name": "api_key",
                "in": "header",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}